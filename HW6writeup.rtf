{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0;\cssrgb\c100000\c100000\c100000;
}
\margl1440\margr1440\vieww28600\viewh17440\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Challenge 1:\
read the spaces in each line and put them in a file\
\pard\pardeftab720\sl340\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 while IFS= read -r i; do printf "%s" "$i" | tr -dc " " | wc -m; done\
converted them into a string using below\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2 \cf3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 cat ascii.txt | while IFS= read -r i; do awk '\{ printf("%c",$0); \}' ; done\

\f1 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec2 and got this flag.\
Flag:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2 \cf3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 CSE545\{SnOmmpmKbyZjGv6TA8thFzn6uVQqwgl9\}\
\
\pard\pardeftab720\partightenfactor0

\f3 \cf2 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 Challenge 2:\
Extracted the last bit of the binary of every pixel[0] and converted the the output back to ascii using online tools and got the flag.\
Flag:\
CSE545\{99hz3p4tfn10pgdxjt57\}\
\
Challenge 3:\
Extracted the files using bin walk and then reversed the binary 4298 with ghidra and got the flag.\
Flag:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 CSE545\{tuodpyfrb5z12sguj7l8\}\
\
Challenge 4:\
Got the CRC values using 7zip and wrote below python program to get the 2 characters whose CRC values match.\
\
import zlib\
for i in range(len(str)):\
    a=str[i]\
    for j in range(len(str)):\
        b=a+str[j]\
        #print(b)\
        if(hex(zlib.crc32(bytes(b, 'utf-8')) & 0xffffffff) == hex(int("A93018CC",16))):\
            print(b)\
            break\
        else:\
            continue\
        \
Flag:\
CSE545\{G63rZIeZxWxrkB9T8haZavp07ospTnL1\}\
}