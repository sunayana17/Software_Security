{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 hw4 \
\
challenge 1: \
Gave the key mentioned in the compare function and got the flag.\
\
\
challenge 2:\
As the given function was adding 3 to the value given just reversed it and subtracted 3 and gave the value and got the flag.\
\
challenge 3:\
Since the given function was doing xor operation after addition of 3 we had to do xor again to nullify the effect and subtract 3 to get the flag.\
\
\
challenge 4:\
As I could see there were 4 equations and 4 unknowns, just google searched for an online platform that could solve the equation for me and got the flag.\
\
challenge 5: \
Had to come up with each character of the string so that the verify function returns 1. Found the pattern that if the ifs are nested then the particular bit will be 1 else 0 and following this I got the string and the flag.\
\
challenge 6: \
Had to come up with each character of the string so that the verify function returns 1. Only change was this verify function was going to return 1 only when all ifs are unsatisfied. Found the pattern that if the ifs are nested then the particular bit will be 1 else 0 and following this I got the string and the flag.	\
\
challenge 7:\
From the code we could see that to get the flag the verify function should return 1 and that was possible only when we reach the index x= 11 and y= 1. For reaching this index it was needed to traverse indices where values = 0, so we made a string which takes such a path and got the flag.\
\
}